/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/kalman-filter@1.9.2/demo/src/main.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const{KalmanFilter:KalmanFilter}=kalmanFilter,noisyObservations=require("./observations.json").observations,kfOptions=require("./kf-options.js"),createElement=require("./views/create-element"),createGroupBoxes=require("./views/create-group-boxes"),kf=new KalmanFilter(kfOptions);let predicted=kf.predict();const img=document.querySelector("#bikes"),delay=200;let promise=Promise.resolve(),previousCorrected=null;const delayPromise=e=>new Promise((r=>{setTimeout(r,e)}));module.exports={run(){noisyObservations.forEach(((e,r)=>{promise=promise.then((()=>{predicted=kf.predict({previousCorrected:previousCorrected});const{mean:e,covariance:r}=predicted;return createGroupBoxes({mean:e,covariance:r,parent:img,className:"predicted",color:"blue"}),delayPromise(200)})).then((e=>(createElement({className:"observation",bbox:[e[0]+e[2]/2,e[1]+e[3]/2,e[2],e[3]],parent:img,color:"white",lineStyle:"solid"}),delayPromise(200))).bind(null,e,r)).then((e=>{previousCorrected=kf.correct({predicted:predicted,observation:e});const{mean:r,covariance:o}=previousCorrected;return createGroupBoxes({mean:r,covariance:o,parent:img,className:"corrected",color:"red"}),delayPromise(200)}).bind(null,e,r))}))}};
//# sourceMappingURL=/sm/fd50e5b971a5163de23c77715a4ac1a558714be86d982391b154cd9ffdc25607.map