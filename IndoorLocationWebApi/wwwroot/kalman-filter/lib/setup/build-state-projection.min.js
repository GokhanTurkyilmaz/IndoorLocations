/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/kalman-filter@1.9.2/lib/setup/build-state-projection.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const padWithZeros=require("../linalgebra/pad-with-zeros.js"),identity=require("../linalgebra/identity.js");module.exports=function({observation:e,dynamic:i}){const{observedProjection:n,stateProjection:o}=e,t=e.dimension,r=i.dimension;if(n&&o)throw new TypeError("You cannot use both observedProjection and stateProjection");if(n){const o=padWithZeros(n,{dimension:r});return{observation:Object.assign({},e,{stateProjection:o}),dynamic:i}}if(t&&r){const n=identity(t);return{observation:Object.assign({},e,{stateProjection:padWithZeros(n,{dimension:r})}),dynamic:i}}return{observation:e,dynamic:i}};
//# sourceMappingURL=/sm/47643904122b552eedf329c3ee232d797078b76566770856e3321cc7d5d82eb4.map