/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/kalman-filter@1.9.2/lib/utils/check-covariance.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const tolerance=.1,Matrix=require("@rayyamhk/matrix"),checkMatrix=require("./check-matrix"),checkDefinitePositive=function(e,i=1e-10){new Matrix(e).eigenvalues().forEach((a=>{if(a<=-i)throw console.log(e,a),new Error(`Eigenvalue should be positive (actual: ${a})`)})),console.log("is definite positive",e)},checkSymetric=function(e,i="checkSymetric"){e.forEach(((a,r)=>a.forEach(((a,c)=>{if(r===c&&a<0)throw new Error(`[${i}] Variance[${c}] should be positive (actual: ${a})`);if(Math.abs(a)>Math.sqrt(e[r][r]*e[c][c]))throw console.log(e),new Error(`[${i}] Covariance[${r}][${c}] should verify Cauchy Schwarz Inequality (expected: |x| <= sqrt(${e[r][r]} * ${e[c][c]}) actual: ${a})`);if(Math.abs(a-e[c][r])>.1)throw new Error(`[${i}] Covariance[${r}][${c}] should equal Covariance[${c}][${r}]  (actual diff: ${Math.abs(a-e[c][r])})  = ${a} - ${e[c][r]}\n`+e.join("\n")+" is invalid")}))))};module.exports=function({covariance:e,eigen:i=!1}){checkMatrix(e),checkSymetric(e),i&&checkDefinitePositive(e)};
//# sourceMappingURL=/sm/3fa50bc7ecf1d3de63677b916b6b9bfc290bce30a30522587d50fe15e5f4d657.map