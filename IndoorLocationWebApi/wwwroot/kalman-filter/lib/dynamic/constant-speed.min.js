/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/kalman-filter@1.9.2/lib/dynamic/constant-speed.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const identity=require("../linalgebra/identity.js");module.exports=function(e,t){const n=e.timeStep||1,{observedProjection:i}=t,{stateProjection:o}=t,r=t.dimension;let s;if(o&&Number.isInteger(o[0].length/2))s=t.stateProjection[0].length;else if(i)s=2*i[0].length;else{if(!r)throw new Error("observedProjection or stateProjection should be defined in observation in order to use constant-speed filter");s=2*r}const c=s/2,a=identity(s);for(let e=0;e<c;e++)a[e][e+c]=n;const l=new Array(c).fill(1).concat(new Array(c).fill(n*n)),d=e.covariance||l;return Object.assign({},e,{dimension:s,transition:a,covariance:d})};
//# sourceMappingURL=/sm/930ac1eba3ae4b22f43a29e4abb1b312a0a7afe14aa276026d3b046e0ada7545.map