/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/kalman-filter@1.9.2/test/unit/core/linear-2d.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const test=require("ava"),CoreKalmanFilter=require("../../../lib/core-kalman-filter.js"),State=require("../../../lib/state.js"),distanceMat=require("../../../lib/linalgebra/distance-mat.js"),huge=1e3,defaultOptions={observation:{dimension:2,stateProjection:()=>[[1,0,0,0],[0,1,0,0]],covariance:()=>[[1,0],[0,1]]},dynamic:{init:{mean:[[500],[500],[0],[0]],covariance:[[1e3,0,0,0],[0,1e3,0,0],[0,0,1e3,0],[0,0,0,1e3]]},dimension:4,transition:()=>[[1,0,timeStep,0],[0,1,0,timeStep],[0,0,1,0],[0,0,0,1]],covariance:()=>[[1,0,0,0],[0,1,0,0],[0,0,.01,0],[0,0,0,.01]]}},timeStep=.1,observations=[[[1],[2]],[[2.1],[3.9]],[[3],[6]]];test("Fitted observation",(e=>{const t=new CoreKalmanFilter(defaultOptions),a=new State({mean:[[1],[2],[11],[19]],covariance:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]}),n=t.predict({previousCorrected:a}),i=t.correct({predicted:n,observation:observations[1]}),r=t.correct({predicted:n,observation:[[3.2],[2.9]]});e.true(i instanceof State),e.true(r instanceof State);const o=distanceMat(a.mean,i.mean),c=distanceMat(a.mean,r.mean);e.true(o<c)})),test("Covariance between position and speed",(e=>{const t=new CoreKalmanFilter(defaultOptions),{covariance:a}=t.predict();e.not(a[1][3],0),e.not(a[2][4],0)})),test("Balanced and unbalanced",(e=>{const t=new CoreKalmanFilter(defaultOptions),a=new State({mean:[[1],[2],[1.1],[1.9]],covariance:[[1,0,0,0],[0,1,0,0],[0,0,.01,0],[0,0,0,.01]]}),n=new State({mean:[[1],[2],[1.1],[1.9]],covariance:[[10,0,0,0],[0,1,0,0],[0,0,.1,0],[0,0,0,.01]]}),i=t.predict({previousCorrected:a}),r=t.predict({previousCorrected:n});e.true(i instanceof State),e.true(r instanceof State),e.true(i.covariance[0][0]<r.covariance[0][0])})),test("Impact of timeStep",(e=>{const t=Object.assign({},defaultOptions,{dynamic:Object.assign({},defaultOptions.dynamic,{transition:()=>[[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]]})}),a=Object.assign({},defaultOptions,{dynamic:Object.assign({},defaultOptions.dynamic,{transition:()=>[[1,0,2,0],[0,1,0,2],[0,0,1,0],[0,0,0,1]]})}),n=new CoreKalmanFilter(t),i=new CoreKalmanFilter(a),r=n.predict(),o=i.predict();e.true(r instanceof State),e.true(o instanceof State),e.true(r.covariance[0][0]<o.covariance[0][0]),e.true(r.covariance[0][2]<o.covariance[0][2])}));
//# sourceMappingURL=/sm/5a1b2984615709ed72dffe1e82e185728d3c41d1cecf0e9c1cf05b7bd7b3d34f.map