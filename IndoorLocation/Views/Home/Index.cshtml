@{
    ViewData["Title"] = "Home Page";
}
<style>
    #gateway1 {
        /*absolute*/
        position: absolute;
        z-index: 8;
        background-color: #f1f1f1;
        border: 1px solid #d3d3d3;
    }

    #gateway2 {
        position: absolute;
        z-index: 9;
        background-color: #f1f1f1;
        border: 1px solid #d3d3d3;
    }

    #gateway3 {
        position: absolute;
        z-index: 10;
        background-color: #f1f1f1;
        border: 1px solid #d3d3d3;
    }

    #mydiv0 {
        position: absolute;
        z-index: 8;
        background-color: #f1f1f1;
        border: 1px solid #d3d3d3;
        text-align: center;
    }

    #mydivheader {
        position: absolute;
        z-index: 10;
        background-color: #2196F3;
        color: #fff;
    }
</style>

<div>
    <div>
        <div class="input-group">
            <span class="input-group-text">En Giriniz</span>
            <input name="weight" id="xweight" type="text" aria-label="First name" class="form-control">
            <span class="input-group-text">Boy Giriniz</span>
            <input name="height" id="yheight" type="text" aria-label="Last name" class="form-control">
            <span class="input-group-text">RSSI Giriniz</span>
            <input name="rssi" id="rssi" type="text" aria-label="Last name" class="form-control">
        </div>

        <button id="createQuadrilateral" class="btn btn-danger" onclick="createQuadrilateral()">
            Alan Oluştur
        </button>
        <button id="element" class="btn btn-danger" onclick="getPosition()">
            Kordinatlar
        </button>
        <button id="addNewGateway" class="btn btn-danger" onclick="changeElementPosition()">Pozisyon Değiştir</button>
    </div>

    <div id="mydivv0">
        <canvas id="mydiv0" width="1100" height="400">
        </canvas>
        <!-- Include a header DIV with the same name as the draggable DIV, followed by "header" -->
        <div id="gateway1" width="24" height="24" class="card-body">
            G1
            @*<img id="scream" width="24" height="24"
                src="~/icons/bluetooth.png" alt="The Scream">*@
        </div>
        <div id="gateway2" width="24" height="24" class="card-body">
            G2
            @*<img id="scream" width="24" height="24"
                src="~/icons/bluetooth.png" alt="The Scream">*@
        </div>
        <div id="gateway3" width="24" height="24" class="card-body">
            G3
            @*<img id="scream" width="24" height="24"
                src="~/icons/bluetooth.png" alt="The Scream">*@
        </div>
        <div id="mydivheader">
            BLE
        </div>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>

    dragElement(document.getElementById("gateway1"));
    dragElement(document.getElementById("gateway2"));
    dragElement(document.getElementById("gateway3"));
    //dragElement(document.getElementById("mydiv0"));
    function dragElement(elmnt) {
        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
        if (document.getElementById(elmnt.id + "header")) {
            // if present, the header is where you move the DIV from:
            document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;

        } else {
            // otherwise, move the DIV from anywhere inside the DIV:
            elmnt.onmousedown = dragMouseDown;
        }

        function dragMouseDown(e) {
            e = e || window.event;
            e.preventDefault();
            // get the mouse cursor position at startup:
            pos3 = e.clientX;
            pos4 = e.clientY;
            document.onmouseup = closeDragElement;
            // call a function whenever the cursor moves:
            document.onmousemove = elementDrag;
        }

        function elementDrag(e) {
            e = e || window.event;
            e.preventDefault();
            // calculate the new cursor position:
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
        }

        function closeDragElement() {
            // stop moving when mouse button is released:
            document.onmouseup = null;
            document.onmousemove = null;
        }


    }
    function createQuadrilateral() {
        var x = document.getElementById("xweight").value
        var y = document.getElementById("yheight").value

        if (x < 24 || y < 24 || null) {
            alert("X ve Y degerleri 24 den kucuk ve null olmamali")
        }
        else {
            var canvas = document.getElementById("mydiv0");
            canvas.width = x;
            canvas.height = y;
        }

    }

    function getDocumentOffsetPositionX(id) {
        var el = $(id);
        var position = el.position();
        var x;
        x = position.left;
        return x;
    }
    function getDocumentOffsetPositionY(id) {
        var el = $(id);
        var position = el.position();
        var y;
        y = position.top;
        return y;
    }
    function getPosition() {
        //canvas of x,y
        getDocumentOffsetPositionX(mydiv0)
        getDocumentOffsetPositionY(mydiv0)
        //position of X
        getDocumentOffsetPositionX(gateway1)
        console.log("G1 X KORDINATE" + (getDocumentOffsetPositionX(gateway1) - getDocumentOffsetPositionX(mydiv0)))
        getDocumentOffsetPositionX(gateway2)
        console.log("G2 X KORDINATE" + (getDocumentOffsetPositionX(gateway2) - getDocumentOffsetPositionX(mydiv0)))
        getDocumentOffsetPositionX(gateway3)
        console.log("G3 X KORDINATE" + (getDocumentOffsetPositionX(gateway3) - getDocumentOffsetPositionX(mydiv0)))
        //position of Y
        getDocumentOffsetPositionY(gateway1)
        console.log("G1 Y KORDINATE" + (getDocumentOffsetPositionY(gateway1) - getDocumentOffsetPositionY(mydiv0)))
        getDocumentOffsetPositionY(gateway2)
        console.log("G2 Y KORDINATE" + (getDocumentOffsetPositionY(gateway2) - getDocumentOffsetPositionY(mydiv0)))
        getDocumentOffsetPositionY(gateway3)
        console.log("G3 Y KORDINATE" + (getDocumentOffsetPositionY(gateway3) - getDocumentOffsetPositionY(mydiv0)))
        distanceOfBetweenGateways();
    }
    function distanceOfBetweenGateways() {
        var dX10 = (getDocumentOffsetPositionX(gateway2) - getDocumentOffsetPositionX(mydiv0)) - (getDocumentOffsetPositionX(gateway1) - getDocumentOffsetPositionX(mydiv0));
        var dY10 = (getDocumentOffsetPositionY(gateway2) - getDocumentOffsetPositionY(mydiv0)) - (getDocumentOffsetPositionY(gateway1) - getDocumentOffsetPositionY(mydiv0));

        var dX11 = (getDocumentOffsetPositionX(gateway3) - getDocumentOffsetPositionX(mydiv0)) - (getDocumentOffsetPositionX(gateway1) - getDocumentOffsetPositionX(mydiv0));
        var dY11 = (getDocumentOffsetPositionY(gateway3) - getDocumentOffsetPositionY(mydiv0)) - (getDocumentOffsetPositionY(gateway1) - getDocumentOffsetPositionY(mydiv0));

        var dX12 = (getDocumentOffsetPositionX(gateway3) - getDocumentOffsetPositionX(mydiv0)) - (getDocumentOffsetPositionX(gateway2) - getDocumentOffsetPositionX(mydiv0))
        var dY12 = (getDocumentOffsetPositionY(gateway3) - getDocumentOffsetPositionY(mydiv0)) - (getDocumentOffsetPositionY(gateway2) - getDocumentOffsetPositionY(mydiv0));

        var dT10 = dX10 * dX10;
        var dT20 = dY10 * dY10;

        var dT11 = dX11 * dX11;
        var dT21 = dY11 * dY11;

        var dT12 = dX12 * dX12;
        var dT22 = dY12 * dY12;

        var distance1 = Math.sqrt(dT10 + dT20);

        var distance2 = Math.sqrt(dT11 + dT21);

        var distance3 = Math.sqrt(dT12 + dT22);
        //alert("G1-G2 Arasindaki mesafe:" + "X:" + dX + "Y:" + dY);
        $("#mydivheader").offset({ top: getDocumentOffsetPositionY(mydiv0), left: getDocumentOffsetPositionX(mydiv0) })
        alert("G1-G2 Arasindaki mesafe:" + distance1);
        alert("G1-G3 Arasindaki mesafe:" + distance2);
        alert("G2-G3 Arasindaki mesafe:" + distance3);
        //alert(distanceCalculation(-65))
        calculateNewCordinate();
    }

    function changeElementPosition() {

        calculateNewCordinate();
    }

    //////////////////////////// MEASUMERNT DISTANCE FOR RSSI ///////////////////////////
    function distanceCalculation(rssiValue) {
        rssiValue = $("#rssi").val();
        //alert(rssiValue)
        var txPowerValue = -59 // Normal ranges between -59 to -65

        if (rssiValue == 0) {

            return -1.0;

        }

        var ratio = rssiValue * 1.0 / txPowerValue;

        if (ratio < 1.0) {

            return Math.pow(ratio, 10);

        }

        else {

            var distance = (0.89976) * Math.pow(ratio, 7.7095) + 0.111;

            return distance;

        }

    }

    function calculateNewCordinate() {
        var distance = distanceCalculation();

        var dX10 = (getDocumentOffsetPositionX(gateway2) - getDocumentOffsetPositionX(mydiv0)) - (getDocumentOffsetPositionX(gateway1) - getDocumentOffsetPositionX(mydiv0));
        var dY10 = (getDocumentOffsetPositionY(gateway2) - getDocumentOffsetPositionY(mydiv0)) - (getDocumentOffsetPositionY(gateway1) - getDocumentOffsetPositionY(mydiv0));

        var A1 = {
            x: dX10,
            y: dY10
        };

        var dX11 = (getDocumentOffsetPositionX(gateway3) - getDocumentOffsetPositionX(mydiv0)) - (getDocumentOffsetPositionX(gateway1) - getDocumentOffsetPositionX(mydiv0));
        var dY11 = (getDocumentOffsetPositionY(gateway3) - getDocumentOffsetPositionY(mydiv0)) - (getDocumentOffsetPositionY(gateway1) - getDocumentOffsetPositionY(mydiv0));

        var A2 = {
            x: dX11,
            y: dY11
        };

        // Distance

        var d = distance * 10;

        // Find Slope of the line
        var slope = (A2.y - A1.y) / (A2.x - A1.x);

        // Find angle of line
        var theta = Math.atan(slope);

        // the coordinates of the A3 Point
        var A3x = A2.x + d * Math.cos(theta);
        var A3y = A2.y + d * Math.sin(theta);
        if (A3x < getDocumentOffsetPositionX(mydiv0) || A3y < getDocumentOffsetPositionY(mydiv0)) {
            $("#mydivheader").offset({ top: (A3y + getDocumentOffsetPositionX(mydiv0)), left: (A3x + getDocumentOffsetPositionY(mydiv0)) })
            alert("Eklendi")
        } else {
            $("#mydivheader").offset({ top: A3y, left: A3x })
        }

        console.log(A3x);
        console.log(A3y);

    }

</script>
